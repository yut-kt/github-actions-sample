name: Create Git Tag with Semantic Versioning
run-name: Raise the ${{ inputs.target }} Version and Git Tag Push

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'バージョンアップ対象'
        required: true
        type: choice
        options:
          - patch
          - minor

defaults:
  run:
    shell: bash

jobs:
  check-ref:
    runs-on: ubuntu-latest
    steps:
      - name: check
        if: github.ref_name != 'main'
        run: exit 1

  extract-semantic-version:
    runs-on: ubuntu-latest
    needs: check-ref
    outputs:
      major: ${{ steps.extract_version.outputs.major }}
      minor: ${{ steps.extract_version.outputs.minor }}
      patch: ${{ steps.extract_version.outputs.patch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Fetch all tags
        run: git fetch --tags
      - name: Describe latest tag
        id: describe_latest_tag
        run: |
          tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
      - id: extract_version
        run: |
          tag=${{ steps.describe_latest_tag.outputs.tag }}
          tag_without_v=${tag#v}
          IFS='.' read -r major minor patch <<< "$tag_without_v"
          echo "major=$major" >> "$GITHUB_OUTPUT"
          echo "minor=$minor" >> "$GITHUB_OUTPUT"
          echo "patch=$patch" >> "$GITHUB_OUTPUT"

  patch-update:
    if: ${{ inputs.target == 'patch' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: extract-semantic-version
    env:
      MAJOR: ${{ needs.extract-semantic-version.outputs.major }}
      MINOR: ${{ needs.extract-semantic-version.outputs.minor }}
      PATCH: ${{ needs.extract-semantic-version.outputs.patch }}
    outputs:
      tag: ${{ steps.new_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - name: New Tag
        id: new_tag
        run: echo "tag=v$MAJOR.$MINOR.$((PATCH + 1))" >> "$GITHUB_OUTPUT"
      - name: Push Tag
        env:
          TAG: ${{ steps.new_tag.outputs.tag }}
        run: |
          git tag $TAG
          git push origin $TAG

  minor-update:
    if: ${{ inputs.target == 'minor' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: extract-semantic-version
    env:
      MAJOR: ${{ needs.extract-semantic-version.outputs.major }}
      MINOR: ${{ needs.extract-semantic-version.outputs.minor }}
      PATCH: ${{ needs.extract-semantic-version.outputs.patch }}
    outputs:
      tag: ${{ steps.new_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - name: New Tag
        id: new_tag
        run: echo "tag=v$MAJOR.$((MINOR + 1)).0" >> "$GITHUB_OUTPUT"
      - name: Push Tag
        env:
          TAG: ${{ steps.new_tag.outputs.tag }}
        run: |
          git tag $TAG
          git push origin $TAG

  last:
    if: always()
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs:
      - patch-update
      - minor-update
    steps:
      - uses: actions/checkout@v4
      - name: test
        run: echo ${{ needs.*.outputs.tag }}
